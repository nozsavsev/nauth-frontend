/* tslint:disable */
/* eslint-disable */
/**
 * nauth-asp
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { EmailActionType } from "./EmailActionType";
import { EmailActionTypeFromJSON, EmailActionTypeFromJSONTyped, EmailActionTypeToJSON, EmailActionTypeToJSONTyped } from "./EmailActionType";

/**
 *
 * @export
 * @interface EmailActionDTO
 */
export interface EmailActionDTO {
  /**
   *
   * @type {string}
   * @memberof EmailActionDTO
   */
  id?: string | null;
  /**
   *
   * @type {string}
   * @memberof EmailActionDTO
   */
  userId?: string | null;
  /**
   *
   * @type {string}
   * @memberof EmailActionDTO
   */
  data?: string | null;
  /**
   *
   * @type {EmailActionType}
   * @memberof EmailActionDTO
   */
  type?: EmailActionType;
  /**
   *
   * @type {Date}
   * @memberof EmailActionDTO
   */
  expiresAt?: Date;
  /**
   *
   * @type {Date}
   * @memberof EmailActionDTO
   */
  createdAt?: Date;
}

/**
 * Check if a given object implements the EmailActionDTO interface.
 */
export function instanceOfEmailActionDTO(value: object): value is EmailActionDTO {
  return true;
}

export function EmailActionDTOFromJSON(json: any): EmailActionDTO {
  return EmailActionDTOFromJSONTyped(json, false);
}

export function EmailActionDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): EmailActionDTO {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"] == null ? undefined : json["id"],
    userId: json["userId"] == null ? undefined : json["userId"],
    data: json["data"] == null ? undefined : json["data"],
    type: json["type"] == null ? undefined : EmailActionTypeFromJSON(json["type"]),
    expiresAt: json["expiresAt"] == null ? undefined : new Date(json["expiresAt"]),
    createdAt: json["createdAt"] == null ? undefined : new Date(json["createdAt"]),
  };
}

export function EmailActionDTOToJSON(json: any): EmailActionDTO {
  return EmailActionDTOToJSONTyped(json, false);
}

export function EmailActionDTOToJSONTyped(value?: EmailActionDTO | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    id: value["id"],
    userId: value["userId"],
    data: value["data"],
    type: EmailActionTypeToJSON(value["type"]),
    expiresAt: value["expiresAt"] == null ? undefined : value["expiresAt"].toISOString(),
    createdAt: value["createdAt"] == null ? undefined : value["createdAt"].toISOString(),
  };
}
