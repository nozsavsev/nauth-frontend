/* tslint:disable */
/* eslint-disable */
/**
 * nauth-asp
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { EmailActionDTO } from "./EmailActionDTO";
import { EmailActionDTOFromJSON, EmailActionDTOFromJSONTyped, EmailActionDTOToJSON, EmailActionDTOToJSONTyped } from "./EmailActionDTO";
import type { SessionDTO } from "./SessionDTO";
import { SessionDTOFromJSON, SessionDTOFromJSONTyped, SessionDTOToJSON, SessionDTOToJSONTyped } from "./SessionDTO";
import type { Model2FAEntryDTO } from "./Model2FAEntryDTO";
import { Model2FAEntryDTOFromJSON, Model2FAEntryDTOFromJSONTyped, Model2FAEntryDTOToJSON, Model2FAEntryDTOToJSONTyped } from "./Model2FAEntryDTO";
import type { ServiceDTO } from "./ServiceDTO";
import { ServiceDTOFromJSON, ServiceDTOFromJSONTyped, ServiceDTOToJSON, ServiceDTOToJSONTyped } from "./ServiceDTO";
import type { UserPermissionDTO } from "./UserPermissionDTO";
import {
  UserPermissionDTOFromJSON,
  UserPermissionDTOFromJSONTyped,
  UserPermissionDTOToJSON,
  UserPermissionDTOToJSONTyped,
} from "./UserPermissionDTO";

/**
 *
 * @export
 * @interface UserDTO
 */
export interface UserDTO {
  /**
   *
   * @type {string}
   * @memberof UserDTO
   */
  id?: string | null;
  /**
   *
   * @type {string}
   * @memberof UserDTO
   */
  name?: string | null;
  /**
   *
   * @type {string}
   * @memberof UserDTO
   */
  email?: string | null;
  /**
   *
   * @type {string}
   * @memberof UserDTO
   */
  avatarURL?: string | null;
  /**
   *
   * @type {boolean}
   * @memberof UserDTO
   */
  isEmailVerified?: boolean;
  /**
   *
   * @type {boolean}
   * @memberof UserDTO
   */
  isEnabled?: boolean;
  /**
   *
   * @type {Date}
   * @memberof UserDTO
   */
  createdAt?: Date;
  /**
   *
   * @type {Array<EmailActionDTO>}
   * @memberof UserDTO
   */
  emailActions?: Array<EmailActionDTO> | null;
  /**
   *
   * @type {Array<SessionDTO>}
   * @memberof UserDTO
   */
  sessions?: Array<SessionDTO> | null;
  /**
   *
   * @type {Array<UserPermissionDTO>}
   * @memberof UserDTO
   */
  permissions?: Array<UserPermissionDTO> | null;
  /**
   *
   * @type {Array<ServiceDTO>}
   * @memberof UserDTO
   */
  services?: Array<ServiceDTO> | null;
  /**
   *
   * @type {Array<Model2FAEntryDTO>}
   * @memberof UserDTO
   */
  twoFactorAuthEntries?: Array<Model2FAEntryDTO> | null;
}

/**
 * Check if a given object implements the UserDTO interface.
 */
export function instanceOfUserDTO(value: object): value is UserDTO {
  return true;
}

export function UserDTOFromJSON(json: any): UserDTO {
  return UserDTOFromJSONTyped(json, false);
}

export function UserDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDTO {
  if (json == null) {
    return json;
  }
  return {
    id: json["id"] == null ? undefined : json["id"],
    name: json["name"] == null ? undefined : json["name"],
    email: json["email"] == null ? undefined : json["email"],
    avatarURL: json["avatarURL"] == null ? undefined : json["avatarURL"],
    isEmailVerified: json["isEmailVerified"] == null ? undefined : json["isEmailVerified"],
    isEnabled: json["isEnabled"] == null ? undefined : json["isEnabled"],
    createdAt: json["createdAt"] == null ? undefined : new Date(json["createdAt"]),
    emailActions: json["emailActions"] == null ? undefined : (json["emailActions"] as Array<any>).map(EmailActionDTOFromJSON),
    sessions: json["sessions"] == null ? undefined : (json["sessions"] as Array<any>).map(SessionDTOFromJSON),
    permissions: json["permissions"] == null ? undefined : (json["permissions"] as Array<any>).map(UserPermissionDTOFromJSON),
    services: json["services"] == null ? undefined : (json["services"] as Array<any>).map(ServiceDTOFromJSON),
    twoFactorAuthEntries:
      json["twoFactorAuthEntries"] == null ? undefined : (json["twoFactorAuthEntries"] as Array<any>).map(Model2FAEntryDTOFromJSON),
  };
}

export function UserDTOToJSON(json: any): UserDTO {
  return UserDTOToJSONTyped(json, false);
}

export function UserDTOToJSONTyped(value?: UserDTO | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    id: value["id"],
    name: value["name"],
    email: value["email"],
    avatarURL: value["avatarURL"],
    isEmailVerified: value["isEmailVerified"],
    isEnabled: value["isEnabled"],
    createdAt: value["createdAt"] == null ? undefined : value["createdAt"].toISOString(),
    emailActions: value["emailActions"] == null ? undefined : (value["emailActions"] as Array<any>).map(EmailActionDTOToJSON),
    sessions: value["sessions"] == null ? undefined : (value["sessions"] as Array<any>).map(SessionDTOToJSON),
    permissions: value["permissions"] == null ? undefined : (value["permissions"] as Array<any>).map(UserPermissionDTOToJSON),
    services: value["services"] == null ? undefined : (value["services"] as Array<any>).map(ServiceDTOToJSON),
    twoFactorAuthEntries:
      value["twoFactorAuthEntries"] == null ? undefined : (value["twoFactorAuthEntries"] as Array<any>).map(Model2FAEntryDTOToJSON),
  };
}
