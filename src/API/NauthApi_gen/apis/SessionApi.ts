/* tslint:disable */
/* eslint-disable */
/**
 * nauth-asp
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import type { SessionDTOListResponseWrapper, StringResponseWrapper } from "../models/index";
import {
  SessionDTOListResponseWrapperFromJSON,
  SessionDTOListResponseWrapperToJSON,
  StringResponseWrapperFromJSON,
  StringResponseWrapperToJSON,
} from "../models/index";

export interface ApiSessionRevokeDeleteRequest {
  sessionId?: string;
}

/**
 *
 */
export class SessionApi extends runtime.BaseAPI {
  /**
   */
  async apiSessionGetMyGetRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<SessionDTOListResponseWrapper>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    let urlPath = `/api/Session/getMy`;

    const response = await this.request(
      {
        path: urlPath,
        method: "GET",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) => SessionDTOListResponseWrapperFromJSON(jsonValue));
  }

  /**
   */
  async apiSessionGetMyGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SessionDTOListResponseWrapper> {
    const response = await this.apiSessionGetMyGetRaw(initOverrides);
    return await response.value();
  }

  /**
   */
  async apiSessionRevokeAllMyDeleteRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<StringResponseWrapper>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    let urlPath = `/api/Session/revoke/allMy`;

    const response = await this.request(
      {
        path: urlPath,
        method: "DELETE",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) => StringResponseWrapperFromJSON(jsonValue));
  }

  /**
   */
  async apiSessionRevokeAllMyDelete(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StringResponseWrapper> {
    const response = await this.apiSessionRevokeAllMyDeleteRaw(initOverrides);
    return await response.value();
  }

  /**
   */
  async apiSessionRevokeCurrentDeleteRaw(
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<StringResponseWrapper>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    let urlPath = `/api/Session/revokeCurrent`;

    const response = await this.request(
      {
        path: urlPath,
        method: "DELETE",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) => StringResponseWrapperFromJSON(jsonValue));
  }

  /**
   */
  async apiSessionRevokeCurrentDelete(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StringResponseWrapper> {
    const response = await this.apiSessionRevokeCurrentDeleteRaw(initOverrides);
    return await response.value();
  }

  /**
   */
  async apiSessionRevokeDeleteRaw(
    requestParameters: ApiSessionRevokeDeleteRequest,
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<runtime.ApiResponse<StringResponseWrapper>> {
    const queryParameters: any = {};

    if (requestParameters["sessionId"] != null) {
      queryParameters["sessionId"] = requestParameters["sessionId"];
    }

    const headerParameters: runtime.HTTPHeaders = {};

    let urlPath = `/api/Session/revoke`;

    const response = await this.request(
      {
        path: urlPath,
        method: "DELETE",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) => StringResponseWrapperFromJSON(jsonValue));
  }

  /**
   */
  async apiSessionRevokeDelete(
    requestParameters: ApiSessionRevokeDeleteRequest = {},
    initOverrides?: RequestInit | runtime.InitOverrideFunction,
  ): Promise<StringResponseWrapper> {
    const response = await this.apiSessionRevokeDeleteRaw(requestParameters, initOverrides);
    return await response.value();
  }

  /**
   */
  async apiSessionRevokeMyDeleteRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<StringResponseWrapper>> {
    const queryParameters: any = {};

    const headerParameters: runtime.HTTPHeaders = {};

    let urlPath = `/api/Session/revoke/my`;

    const response = await this.request(
      {
        path: urlPath,
        method: "DELETE",
        headers: headerParameters,
        query: queryParameters,
      },
      initOverrides,
    );

    return new runtime.JSONApiResponse(response, (jsonValue) => StringResponseWrapperFromJSON(jsonValue));
  }

  /**
   */
  async apiSessionRevokeMyDelete(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<StringResponseWrapper> {
    const response = await this.apiSessionRevokeMyDeleteRaw(initOverrides);
    return await response.value();
  }
}
